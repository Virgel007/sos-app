package org.example.sosbutton.service.impl;

import lombok.RequiredArgsConstructor;
import org.example.sosbutton.model.SOSButton;
import org.example.sosbutton.model.UserProfile;
import org.example.sosbutton.repository.SOSButtonRepository;
import org.example.sosbutton.repository.UserProfileRepository;
import org.example.sosbutton.service.SOSButtonService;
import org.example.sosbutton.service.TelegramService;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

@Service
@RequiredArgsConstructor
public class SOSButtonServiceImpl implements SOSButtonService {

    private final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);
    private final SOSButtonRepository sosButtonRepository;
    private final TelegramService telegramService;
    private final UserProfileRepository userProfileRepository;


    // –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
    public void activateButton(Long userId, String deactivationCode) {
        SOSButton button = new SOSButton();
        button.setIsActive(true);
        button.setActivationTime(LocalDateTime.now());
        button.setDeactivationCode(deactivationCode);

        sosButtonRepository.save(button);

        // –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ 60 —Å–µ–∫—É–Ω–¥
        scheduler.schedule(() -> {
            sendSOSData(userId);
        }, 60, TimeUnit.SECONDS);
    }

    // –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
    public void deactivateButton(Long userId, String enteredCode) {
        SOSButton button = sosButtonRepository.findById(userId).orElse(null);
        if (button == null || !button.getDeactivationCode().equals(enteredCode)) {
            throw new IllegalArgumentException("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏.");
        }

        button.setIsActive(false);
        sosButtonRepository.save(button);
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
    public boolean isButtonActive(Long userId) {
        SOSButton button = sosButtonRepository.findById(userId).orElse(null);
        return button != null && button.getIsActive();
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
    private void sendSOSData(Long userId) {
        UserProfile profile = userProfileRepository.findById(userId).orElse(null);
        if (profile == null) {
            System.out.println("–û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return;
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        String message = "üö® SOS –°–ò–ì–ù–ê–õ üö®\n" +
                "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + userId + "\n" +
                "Telegram –∫–æ–Ω—Ç–∞–∫—Ç: " + profile.getTelegramContact() + "\n" +
                "–ê–¥—Ä–µ—Å –≤—Å—Ç—Ä–µ—á–∏: " + profile.getMeetingAddress() + "\n" +
                "–í—Ä–µ–º—è —Å–≤–∏–¥–∞–Ω–∏—è: " + profile.getMeetingTime() + "\n" +
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " + profile.getComment();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram
        telegramService.sendMessage(message);

        System.out.println("SOS –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: " + userId);
    }
}
